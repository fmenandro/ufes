#include "elemento_poligonal2d8n.h"

elpol2D8N::elpol2D8N()
: elpol2d(nno, ptg, ptg_tot)
{
}

elpol2D8N::~elpol2D8N()
{
}

int elpol2D8N::qnno(){
	return nno;
}

int elpol2D8N::qptg(){
	return ptg;
}

int elpol2D8N::qptg_tot() {
	return ptg_tot;
}

void elpol2D8N::pontos_de_gauss(const int p, double *r, double *s, double *w) {
	// Pontos de Gauss-Legendre encontrados para octogono
	switch (p) {
	case 4: // polinomio ordem 3
		r[0] = 0.6354591585504049;
		r[1] = -0.2176605645161812;
		r[2] = -0.6354591585504048;
		r[3] = 0.2176605645161810;
		s[0] = 0.2176605645161813;
		s[1] = 0.6354591585504049;
		s[2] = -0.2176605645161813;
		s[3] = -0.6354591585504049;
		w[0] = 0.7071067811865475;
		w[1] = 0.7071067811865475;
		w[2] = 0.7071067811865475;
		w[3] = 0.7071067811865475;
		break;
	case 7: // polinomio ordem 5
		r[0] = 0.7346235679486038;
		r[1] = 0.1493968119012565;
		r[2] = -0.5852267560473474;
		r[3] = -0.7346235679486038;
		r[4] = -0.1493968119012566;
		r[5] = 0.5852267560473472;
		r[6] = 0.0000000000000002;
		s[0] = 0.2516265355736452;
		s[1] = 0.7620159398490772;
		s[2] = 0.5103894042754320;
		s[3] = -0.2516265355736452;
		s[4] = -0.7620159398490772;
		s[5] = -0.5103894042754323;
		s[6] = 0.0000000000000000;
		w[0] = 0.3527275860231361;
		w[1] = 0.3527275860231361;
		w[2] = 0.3527275860231361;
		w[3] = 0.3527275860231361;
		w[4] = 0.3527275860231361;
		w[5] = 0.3527275860231361;
		w[6] = 0.7120616086073729;
		break;
	case 12:
		r[0] = 0.7509501018492838;
		r[1] = 0.7509501018492837;
		r[2] = -0.3381150457056074;
		r[3] = -0.3381150457056074;
		r[4] = 0.1803991200563719;
		r[5] = 0.1803991200563719;
		r[6] = -0.5598861139723845;
		r[7] = -0.5598861139723846;
		r[8] = 0.2774703880722094;
		r[9] = 0.2774703880722094;
		r[10] = -0.8241821803201038;
		r[11] = -0.8241821803201037;
		s[0] = -0.3572183703891955;
		s[1] = 0.3572183703891957;
		s[2] = -0.3803335947930100;
		s[3] = 0.3803335947930101;
		s[4] = 0.7924234096388341;
		s[5] = -0.7924234096388341;
		s[6] = 0.7405957337503134;
		s[7] = -0.7405957337503133;
		s[8] = -0.2117171526948262;
		s[9] = 0.2117171526948261;
		s[10] = -0.1016144466244592;
		s[11] = 0.1016144466244594;
		w[0] = 0.2221939950032445;
		w[1] = 0.2221939950032445;
		w[2] = 0.4074499832449777;
		w[3] = 0.4074499832449777;
		w[4] = 0.2522741951050424;
		w[5] = 0.2522741951050424;
		w[6] = 0.1065020377915021;
		w[7] = 0.1065020377915021;
		w[8] = 0.3049587846560641;
		w[9] = 0.3049587846560641;
		w[10] = 0.1208345665722642;
		w[11] = 0.1208345665722642;
		break;
	case 16:
		r[0] = 0.4829421464547459;
		r[1] = -0.1370820744056510;
		r[2] = -0.5676635276857802;
		r[3] = -0.2137532798778280;
		r[4] = 0.4355567355145136;
		r[5] = 0.7821653837608981;
		r[6] = -0.2220159377099403;
		r[7] = -0.9193787793098206;
		r[8] = -0.3461913964389172;
		r[9] = 0.7054207296977806;
		r[10] = 0.8394818213233631;
		r[11] = 0.3161062563117700;
		r[12] = -0.6441174108662033;
		r[13] = -0.7141927089726645;
		r[14] = 0.2027220422037345;
		r[15] = 0.0000000000000838;
		s[0] = 0.3010540383819053;
		s[1] = 0.5523360894645709;
		s[2] = 0.0403084381204023;
		s[3] = -0.5274241046727404;
		s[4] = -0.3662744612941379;
		s[5] = 0.4875823105763241;
		s[6] = 0.8945547051709893;
		s[7] = 0.0652829020154888;
		s[8] = -0.8542076528411885;
		s[9] = -0.5932122649216136;
		s[10] = -0.0596096089797713;
		s[11] = 0.7799742742781135;
		s[12] = 0.5416602208341784;
		s[13] = -0.4452098474488172;
		s[14] = -0.8168150386837031;
		s[15] = 0.0000000000000236;
		w[0] = 0.2823128416394839;
		w[1] = 0.2823128416394839;
		w[2] = 0.2823128416394839;
		w[3] = 0.2823128416394839;
		w[4] = 0.2823128416394839;
		w[5] = 0.0689555444156734;
		w[6] = 0.0689555444156734;
		w[7] = 0.0689555444156734;
		w[8] = 0.0689555444156734;
		w[9] = 0.0689555444156734;
		w[10] = 0.1485531866726490;
		w[11] = 0.1485531866726490;
		w[12] = 0.1485531866726490;
		w[13] = 0.1485531866726490;
		w[14] = 0.1485531866726490;
		w[15] = 0.3293192611071584;
		break;
	}
}

void elpol2D8N::funcao_Forma(double r, double s, double *N, double *dn){
	// RENAN
	// CALCULO DAS FUNCOES DE FORMA (N) E SUAS DERIVADAS (dn)
	// A. TABARRAEI and N. SUKUMAR, Application of polygonal finite elements in linear elasticity
	int i, j;
	double A, B, C, D, E, F, G, H, a[8], b;
	double e[14];
	const double raiz2 = sqrt(2);
	// 
	A = raiz2*(-1 + r - s);
	B = raiz2*(1 + r - s);
	C = raiz2*(-1 + r + s);
	D = raiz2*(1 + r + s);
	// Expressões que se repetem
	e[0] = (-2 * r + A);
	e[1] = (2 * s + B);
	e[2] = (-2 * r + C);
	e[3] = (-2 * s + C);
	e[4] = (-2 * r + D);
	e[5] = (-2 * s + D);
	e[8] = (2 * s + A);
	e[9] = (-2 * r + B);
	e[10] = (2 * r - A);
	e[6] = (10 * r - 40 * pow(r, 3) - 40 * r*pow(s, 2) + 14 * r*raiz2*(pow(r, 2) + pow(s, 2)) +
		2 * r*raiz2*(-3 + 7 * pow(r, 2) + 7 * pow(s, 2)));
	//e[7] = 64.*pow(b / 64, 2); Apos a variável b
	e[11] = (10 * s - 40 * pow(r, 2)*s - 40 * pow(s, 3) + 14 * raiz2*s*(pow(r, 2) + pow(s, 2)) +
		2 * raiz2*s*(-3 + 7 * pow(r, 2) + 7 * pow(s, 2)));
	e[12] = (-2 + raiz2);
	e[13] = (2 - raiz2);
	// 
	a[0] = e[0]* e[1]* e[2]* e[3]* e[4]* e[5];
	a[1] = e[0]* e[8]* e[1]* e[3]* e[4]* e[5];
	a[2] = e[0]* e[9]* e[8]* e[1]* e[3]* e[4];
	a[3] = -e[0]* e[9]* e[8]* e[2]* e[3]* e[4];
	a[4] = e[9]* e[8]* e[2]* e[3]* e[4]* e[5];
	a[5] = e[9]* e[8]* e[1]* e[2]* e[3]* e[5];
	a[6] = e[0]* e[9]* e[8]* e[1]* e[2]* e[5];
	a[7] = -e[0]* e[9]* e[1]* e[2]* e[4]* e[5];
	b = 64.*(-1 + 5*pow(r, 2) - 10*pow(r, 4) + 5*pow(s, 2) - 20*pow(r, 2)*pow(s, 2) - 10*pow(s, 4) + 
		raiz2*(pow(r, 2) + pow(s, 2))*(-3 + 7*pow(r, 2) + 7*pow(s, 2)));
	e[7] = 64.*pow(b / 64, 2);
	// FUNCOES DE FORMA --
	for (i = 0; i < nno; i++){
		N[i] = a[i] / b;
	}
	// DERIVADAS ---------
	// Derivada de Ni em relacao a r
	dn[0] = -(e[0] * e[1] * e[2] * e[3] * e[4] * e[5] * e[6]) / e[7] + 	((raiz2*e[0] * e[1] * e[2] * e[3] * e[4]) + 
		(e[12] * e[0] * e[1] * e[2] * e[3] * e[5]) + (raiz2*e[0] * e[1] * e[2] * e[4] * e[5]) + 
		(e[12] * e[0] * e[1] * e[3] * e[4] * e[5]) + (raiz2*e[0] * e[2] * e[3] * e[4] * e[5]) + 
		(e[12] * e[1] * e[2] * e[3] * e[4] * e[5])) / b;
	dn[2] = -(e[0] * e[8] * e[1] * e[3] * e[4] * e[5] * e[6]) / e[7] + ((raiz2*e[0] * e[8] * e[1] * e[3] * e[4]) + 
		(e[12] * e[0] * e[8] * e[1] * e[3] * e[5]) + (raiz2*e[0] * e[8] * e[1] * e[4] * e[5]) + 
		(raiz2*e[0] * e[8] * e[3] * e[4] * e[5]) + (raiz2*e[0] * e[1] * e[3] * e[4] * e[5]) + 
		(e[12] * e[8] * e[1] * e[3] * e[4] * e[5])) / b;
	dn[4] = -(e[0] * e[9] * e[8] * e[1] * e[3] * e[4] * e[6]) / e[7] + ((e[12] * e[0] * e[9] * e[8] * e[1] * e[3]) + 
		(raiz2*e[0] * e[9] * e[8] * e[1] * e[4]) + (raiz2*e[0] * e[9] * e[8] * e[3] * e[4]) + 
		(raiz2*e[0] * e[9] * e[1] * e[3] * e[4]) + (e[12] * e[0] * e[8] * e[1] * e[3] * e[4]) + 
		(e[12] * e[9] * e[8] * e[1] * e[3] * e[4])) / b;
	dn[6] = -(e[10] * e[9] * e[8] * e[2] * e[3] * e[4] * e[6]) / e[7] + ((e[12] * e[10] * e[9] * e[8] * e[2] * e[3]) + 
		(raiz2*e[10] * e[9] * e[8] * e[2] * e[4]) + (e[12] * e[10] * e[9] * e[8] * e[3] * e[4]) + 
		(raiz2*e[10] * e[9] * e[2] * e[3] * e[4]) + (e[12] * e[10] * e[8] * e[2] * e[3] * e[4]) + 
		(e[13] * e[9] * e[8] * e[2] * e[3] * e[4])) / b;
	dn[8] = -(e[9] * e[8] * e[2] * e[3] * e[4] * e[5] * e[6]) / e[7] + (raiz2*e[9] * e[8] * e[2] * e[3] * e[4]) / b + 
		(e[12] * e[9] * e[8] * e[2] * e[3] * e[5]) / b + (raiz2*e[9] * e[8] * e[2] * e[4] * e[5]) / b + 
		(e[12] * e[9] * e[8] * e[3] * e[4] * e[5]) / b + (raiz2*e[9] * e[2] * e[3] * e[4] * e[5]) / b + 
		(e[12] * e[8] * e[2] * e[3] * e[4] * e[5]) / b;
	dn[10] = -(e[9] * e[8] * e[1] * e[2] * e[3] * e[5] * e[6]) / e[7] + (raiz2*e[9] * e[8] * e[1] * e[2] * e[3]) / b + 
		(raiz2*e[9] * e[8] * e[1] * e[2] * e[5]) / b + (e[12] * e[9] * e[8] * e[1] * e[3] * e[5]) / b + 
		(raiz2*e[9] * e[8] * e[2] * e[3] * e[5]) / b + (raiz2*e[9] * e[1] * e[2] * e[3] * e[5]) / b + 
		(e[12] * e[8] * e[1] * e[2] * e[3] * e[5]) / b;
	dn[12] = -(e[0] * e[9] * e[8] * e[1] * e[2] * e[5] * e[6]) / e[7] + (raiz2*e[0] * e[9] * e[8] * e[1] * e[2]) / b + 
		(e[12] * e[0] * e[9] * e[8] * e[1] * e[5]) / b + (raiz2*e[0] * e[9] * e[8] * e[2] * e[5]) / b + 
		(raiz2*e[0] * e[9] * e[1] * e[2] * e[5]) / b + (e[12] * e[0] * e[8] * e[1] * e[2] * e[5]) / b + 
		(e[12] * e[9] * e[8] * e[1] * e[2] * e[5]) / b;
	dn[14] = -(e[10] * e[9] * e[1] * e[2] * e[4] * e[5] * e[6]) / e[7] + (raiz2*e[10] * e[9] * e[1] * e[2] * e[4]) / b + 
		(e[12] * e[10] * e[9] * e[1] * e[2] * e[5]) / b + (e[12] * e[10] * e[9] * e[1] * e[4] * e[5]) / b + 
		(raiz2*e[10] * e[9] * e[2] * e[4] * e[5]) / b + (e[12] * e[10] * e[1] * e[2] * e[4] * e[5]) / b + 
		(e[13] * e[9] * e[1] * e[2] * e[4] * e[5]) / b;
	// Derivada de Ni em relacao a s
	dn[1] = -(e[0] * e[1] * e[2] * e[3] * e[4] * e[5] * e[11]) / e[7] + ((e[12] * e[0] * e[1] * e[2] * e[3] * e[4]) + 
		(raiz2*e[0] * e[1] * e[2] * e[3] * e[5]) + (e[12] * e[0] * e[1] * e[2] * e[4] * e[5]) + 
		(raiz2*e[0] * e[1] * e[3] * e[4] * e[5]) + (e[13] * e[0] * e[2] * e[3] * e[4] * e[5]) - 
		(raiz2*e[1] * e[2] * e[3] * e[4] * e[5])) / b;
	dn[3] = -(e[0] * e[8] * e[1] * e[3] * e[4] * e[5] * e[11]) / e[7] + ((e[12] * e[0] * e[8] * e[1] * e[3] * e[4]) + 
		(raiz2*e[0] * e[8] * e[1] * e[3] * e[5]) + (e[12] * e[0] * e[8] * e[1] * e[4] * e[5]) + 
		(e[13] * e[0] * e[8] * e[3] * e[4] * e[5]) + (e[13] * e[0] * e[1] * e[3] * e[4] * e[5]) - 
		(raiz2*e[8] * e[1] * e[3] * e[4] * e[5])) / b;
	dn[5] = -(e[0] * e[9] * e[8] * e[1] * e[3] * e[4] * e[11]) / e[7] + ((raiz2*e[0] * e[9] * e[8] * e[1] * e[3]) + 
		(e[12] * e[0] * e[9] * e[8] * e[1] * e[4]) + (e[13] * e[0] * e[9] * e[8] * e[3] * e[4]) + 
		(e[13] * e[0] * e[9] * e[1] * e[3] * e[4]) - (raiz2*e[0] * e[8] * e[1] * e[3] * e[4]) - 
		(raiz2*e[9] * e[8] * e[1] * e[3] * e[4])) / b;
	dn[7] = -(e[10] * e[9] * e[8] * e[2] * e[3] * e[4] * e[11]) / e[7] + ((raiz2*e[10] * e[9] * e[8] * e[2] * e[3]) + 
		(e[12] * e[10] * e[9] * e[8] * e[2] * e[4]) + (raiz2*e[10] * e[9] * e[8] * e[3] * e[4]) + 
		(e[13] * e[10] * e[9] * e[2] * e[3] * e[4]) - (raiz2*e[10] * e[8] * e[2] * e[3] * e[4]) +
		(raiz2*e[9] * e[8] * e[2] * e[3] * e[4])) / b;
	dn[9] = -(e[9] * e[8] * e[2] * e[3] * e[4] * e[5] * e[11]) / e[7] + ((e[12] * e[9] * e[8] * e[2] * e[3] * e[4]) + 
		(raiz2*e[9] * e[8] * e[2] * e[3] * e[5]) + (e[12] * e[9] * e[8] * e[2] * e[4] * e[5]) +
		(raiz2*e[9] * e[8] * e[3] * e[4] * e[5]) + (e[13] * e[9] * e[2] * e[3] * e[4] * e[5]) - 
		(raiz2*e[8] * e[2] * e[3] * e[4] * e[5])) / b;
	dn[11] = -(e[9] * e[8] * e[1] * e[2] * e[3] * e[5] * e[11]) / e[7] + ((e[12] * e[9] * e[8] * e[1] * e[2] * e[3]) + 
		(e[12] * e[9] * e[8] * e[1] * e[2] * e[5]) + (raiz2*e[9] * e[8] * e[1] * e[3] * e[5]) + 
		(e[13] * e[9] * e[8] * e[2] * e[3] * e[5]) + (e[13] * e[9] * e[1] * e[2] * e[3] * e[5]) - 
		(raiz2*e[8] * e[1] * e[2] * e[3] * e[5])) / b;
	dn[13] = -(e[0] * e[9] * e[8] * e[1] * e[2] * e[5] * e[11]) / e[7] + ((e[12] * e[0] * e[9] * e[8] * e[1] * e[2]) + 
		(raiz2*e[0] * e[9] * e[8] * e[1] * e[5]) + (e[13] * e[0] * e[9] * e[8] * e[2] * e[5]) + 
		(e[13] * e[0] * e[9] * e[1] * e[2] * e[5]) - (raiz2*e[0] * e[8] * e[1] * e[2] * e[5]) -
		(raiz2*e[9] * e[8] * e[1] * e[2] * e[5])) / b;
	dn[15] = -(e[10] * e[9] * e[1] * e[2] * e[4] * e[5] * e[11]) / e[7] + ((e[12] * e[10] * e[9] * e[1] * e[2] * e[4]) + 
		(raiz2*e[10] * e[9] * e[1] * e[2] * e[5]) + (raiz2*e[10] * e[9] * e[1] * e[4] * e[5]) + 
		(e[13] * e[10] * e[9] * e[2] * e[4] * e[5]) - (raiz2*e[10] * e[1] * e[2] * e[4] * e[5]) + 
		(raiz2*e[9] * e[1] * e[2] * e[4] * e[5])) / b;
}
